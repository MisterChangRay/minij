using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

/**
    文件访问标识符
    参考文档地址： 
    https://docs.oracle.com/javase/specs/jvms/se7/html/jvms-4.html#jvms-4.1
**/
namespace minij.classfile
{
    public class AccessFlags
    {
        public UInt16 access_flags;

        public AccessFlags(UInt16 a) {
            this.access_flags = a;
        }

        public bool ACC_PUBLIC() {
            // 0x0001 Declared public; may be accessed from outside its package.
            return (this.access_flags & 0x0001) > 0;
        }

        public bool ACC_PRIVATE() {
            //  0x0002	Declared private; accessible only within the defining class.
            return (this.access_flags & 0x0002) > 0;
        }
        public bool ACC_PROTECTED()
        {
            //	0x0004	Declared protected; may be accessed within subclasses.
            return (this.access_flags & 0x0004) > 0;
        }
        public bool ACC_STATIC()
        {
            // 0x0008	Declared static.
            return (this.access_flags & 0x0008) > 0;
        }
        public bool ACC_FINAL()
        {
            // 0x0010	Declared final; must not be overridden(§5.4.5).
            return (this.access_flags & 0x0010) > 0;
        }
        public bool ACC_SYNCHRONIZED()
        {
            // 0x0020	Declared synchronized; invocation is wrapped by a monitor use.
            return (this.access_flags & 0x0020) > 0;
        }
        public bool ACC_SUPER()
        {
            // 0x0020	Treat superclass methods specially when invoked by the invokespecial instruction
            return (this.access_flags & 0x0020) > 0;
        }
        
        public bool ACC_BRIDGE()
        {
            // 0x0040	A bridge method, generated by the compiler.
            return (this.access_flags & 0x0040) > 0;
        }
        public bool ACC_VARARGS()
        {
            // 0x0080	Declared with variable number of arguments.
            return (this.access_flags & 0x0080) > 0;
        }
        public bool ACC_NATIVE()
        {
            // 0x0100	Declared native; implemented in a language other than Java.
            return (this.access_flags & 0x0100) > 0;
        }

        public bool ACC_INTERFACE()
        {
            // 0x0400		Is an interface, not a class.
            return (this.access_flags & 0x0200) > 0;
        }

        public bool ACC_ABSTRACT() {
            // 0x0400	Declared abstract; no implementation is provided.
            return (this.access_flags & 0x0400) > 0;
        }
        public bool ACC_STRICT()
        {
            // 0x0800	Declared strictfp; floating-point mode is FP-strict.
            return (this.access_flags & 0x0800) > 0;
        }
        public bool ACC_SYNTHETIC()
        {
            // 0x1000  Declared synthetic; not present in the source code.
            return (this.access_flags & 0x1000) > 0;
        }
    }
}
